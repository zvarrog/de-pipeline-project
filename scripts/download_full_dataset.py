#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª–Ω–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞ Kindle Reviews —Å Kaggle.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python scripts/download_full_dataset.py

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
    pip install kaggle
    export KAGGLE_USERNAME="–≤–∞—à_username"
    export KAGGLE_KEY="–≤–∞—à_api_key"
"""

import os
import zipfile
from pathlib import Path
import sys


def download_full_dataset():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–æ–ª–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç —Å Kaggle."""

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ kaggle
    try:
        import kaggle
    except ImportError:
        print("‚ùå –û—à–∏–±–∫–∞: –ú–æ–¥—É–ª—å 'kaggle' –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install kaggle")
        return False

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    if not all([os.getenv('KAGGLE_USERNAME'), os.getenv('KAGGLE_KEY')]):
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Kaggle.")
        print("üí° –ù–∞—Å—Ç—Ä–æ–π—Ç–µ:")
        print("   export KAGGLE_USERNAME='–≤–∞—à_username'")
        print("   export KAGGLE_KEY='–≤–∞—à_api_key'")
        return False

    # –°–æ–∑–¥–∞—ë–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏
    data_dir = Path("data/original")
    data_dir.mkdir(parents=True, exist_ok=True)

    output_file = data_dir / "kindle_reviews.csv"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —É–∂–µ —Ñ–∞–π–ª
    if output_file.exists():
        print(f"‚úÖ –§–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {output_file}")
        size_mb = output_file.stat().st_size / (1024 * 1024)
        print(f"üìä –†–∞–∑–º–µ—Ä: {size_mb:.1f} MB")
        return True

    print("üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞—Ç–∞—Å–µ—Ç —Å Kaggle...")
    print("   –î–∞—Ç–∞—Å–µ—Ç: bharadwaj6/kindle-reviews")
    print("   –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç...")

    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º ZIP
        kaggle.api.dataset_download_files(
            'bharadwaj6/kindle-reviews',
            path='data/temp',
            unzip=False
        )

        # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º CSV
        zip_path = Path("data/temp/kindle-reviews.zip")

        with zipfile.ZipFile(zip_path, 'r') as zip_ref:
            # –ò—â–µ–º CSV —Ñ–∞–π–ª
            csv_files = [f for f in zip_ref.namelist() if f.endswith('.csv')]
            if not csv_files:
                print("‚ùå CSV —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∞—Ä—Ö–∏–≤–µ")
                return False

            # –ò–∑–≤–ª–µ–∫–∞–µ–º CSV
            csv_filename = csv_files[0]
            print(f"üì¶ –ò–∑–≤–ª–µ–∫–∞–µ–º: {csv_filename}")

            zip_ref.extract(csv_filename, "data/temp")

            # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –Ω—É–∂–Ω–æ–µ –º–µ—Å—Ç–æ
            temp_csv = Path("data/temp") / csv_filename
            temp_csv.rename(output_file)

        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        zip_path.unlink()
        Path("data/temp").rmdir()

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        size_mb = output_file.stat().st_size / (1024 * 1024)
        print(f"‚úÖ –î–∞—Ç–∞—Å–µ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")
        print(f"üìÅ –ü—É—Ç—å: {output_file}")
        print(f"üìä –†–∞–∑–º–µ—Ä: {size_mb:.1f} MB")
        print(
            f"üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å DAG —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º: {{'data_mode': 'full'}}")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: {e}")
        return False


if __name__ == "__main__":
    success = download_full_dataset()
    sys.exit(0 if success else 1)
